[package]
name = "dotsamaworld"
version = "0.1.1"
authors = []
edition = "2021"
repository = "https://github.com/gilescope/dotsamaworld"
resolver = "2"
default-run = "app"

[features]
default = []
# 3d mouse support (it's best not to have both features enabled at once).
spacemouse = []
bake = ["jpeg-encoder", "png"]
raw_images = []

[workspace]
members = [
    "crates/emojidot",
    "crates/polkadyn",
    "crates/polkapipe",
    "crates/scale-borrow",
    "crates/scale-value-to-borrowed",
]

[dependencies]
emojidot = { path="./crates/emojidot" }
glam = "0.22.0"
winit = { version = "0.27.5", features = ["x11"] }
cgmath = "0.18.0"

pollster = "0.2.5"
egui_wgpu_backend = "0.20.0"
egui_winit_platform = { version = "0.16.0", features = [] } #"webbrowser" , "clipboard"
wgpu = { version = "0.14.2", features = ["webgl"] }
primitive-types = { version = "0.12.1", default-features = false, features = [
    "serde_no_std",
] }
log = { version = "0.4.22", default-features = false }
async-std = { version = "1.12.0", features = [] }
async-recursion = "1.1.1"
bytemuck = "1.16.1"
# Not needed since rust 1.63
lazy_static = "1.5.0"
futures = { version = "0.3.30", default-features = false, features = [] }
# winit = { version = "*", default-features=false, features = ["x11"] }
hex = "0.4.3"
#smoldot = { git= "https://github.com/paritytech/smoldot.git", default-features = false }
parity-scale-codec = { package = "parity-scale-codec", version = "3.6.12", default-features = false, features = [
    "derive",
    "full",
    "bit-vec",
] }
palette = { version = "0.7.6", features = [
    "libm",
], default-features = false } # why: git ref as waiting for publish of > 0.6. perceptual color scheme LCH: https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/
fastrand = { git = "https://github.com/smol-rs/fastrand.git", default-features = false, features = ["js"], tag = "v2.1.0" }
#{ version = "2.1.0", default-features = false }
#serde_bytes = "0.11"
serde = { version = "1.0.204", default-features = false }
serde_json = { version = "1.0.120", default-features = false }
url = { version = "2.5.2", default-features = false }
form_urlencoded = "1.2.1"
# async-tungstenite = "*"
# open = { git = "https://github.com/gilescope/open-rs.git", rev = "255025b420dbfec81d0c28e67055402e14295921" }

#
# substrate deps
#

frame-metadata = { version = "16.0.0", default-features = false, features = ["current", "decode"] }


scale-info = { version = "2.3.1", features = ["serde"] }

scale-value = {  workspace = true }
# scale-value = { git = "https://github.com/gilescope/scale-value", branch = "wasm32", features= ["from_string"] }
# scale-value = {path="/home/gilescope/git/scale-value" }

scale-borrow = { path= "crates/scale-borrow", features = [
    "bitvec",
    "display",
] }
scale-value-to-borrowed = { path= "crates/scale-value-to-borrowed", features = [
    
] }
# scale-value-to-borrowed = { path = "/home/gilescope/git/scale-value-to-borrowed", features=["bitvec"] }
polkadyn = { path = "crates/polkadyn" }
# contract-transcode = { git = "https://github.com/paritytech/cargo-contract.git" }

egui = { version = "0.19.0", default-features = false }
# egui-datepicker = { git = "https://github.com/gilescope/egui-datepicker.git", branch = "for-project-use", default-features = false }
# egui extras has a date but not time chooser
# egui_extras = { version = "0.18", default-features=false, features=["chrono"] }# features = ["image", "image"] }
# image = { version = "0.24", features = ["jpeg"], default-features = false }

jpeg-decoder = { version = "0.3.1", default-features = false }
jpeg-encoder = { version = "0.6.0", optional = true }

# bevy_flycam = { git = "https://github.com/gilescope/bevy_flycam", optional = true, rev = "6d0adbc6884f8becfed7cd943c1acc85f8743824" }
# bevy_flycam = { path = "/Users/bit/p/bevy_flycam", optional = true }
# bevy_mod_picking = "0.8"

# bevy_spacemouse = { git = "https://github.com/gilescope/bevy_spacemouse.git", rev = "8f460d2", optional = true }
# bevy_polyline = "0.3"

[target.'cfg(all(not(target_env = "msvc"),not(target_arch = "wasm32")))'.dependencies]
tikv-jemallocator = "0.5.0"

#
# Dependencies for native only.
#
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
async-tls = { version = "0.11.0", default-features = false }
futures = { version = "0.3.25", default-features = false, features = [] }
chrono = { version = "0.4.23", default-features = false, features = ["clock"] }
polkapipe = { path= "crates/polkapipe", features = [
    "wss",
] }
async-tungstenite = { version = "0.19.0", default-features = true, features = [
    "async-tls",
    "async-std-runtime",
] }
png = { version = "0.17.7", optional = true }

#
# Dependencies for WASM only.
#
[target.'cfg(target_arch = "wasm32")'.dependencies]
gloo-events = "0.1.2"
js-sys = "0.3.60"
# rexie is for indexeddb web caching
# rexie = "0.4"
# console_log = "*"
console_error_panic_hook = "0.1.7"
chrono = { version = "0.4.23", default-features = false, features = ["wasmbind","clock"] }
getrandom = { version = "0.2.8", features = ["wasm-bindgen", "js"] }
#tracing-wasm = "*"
wasm-bindgen = "0.2.83"
ws_stream_wasm = "0.7.3"
# wasm32 branch
polkapipe = { path= "crates/polkapipe", features = [
    "ws-web",
] }

# wee_alloc = "0.4.5"
gloo-worker = "0.2.1"
wasm-bindgen-futures = "0.4.33"
# bevy_web_asset = "0.4"
# bevy_tasks = "0.8"
# bevy_web_fullscreen = { git = "https://github.com/ostwilkens/bevy_web_fullscreen.git" }

# [patch.crates-io]
# http-types= {git="https://github.com/http-rs/http-types.git"}
#console_error_panic_hook = { version = "0.1", optional = true }

#smoldot = { git= "https://github.com/paritytech/smoldot.git", default-features = false }

#subxt = {git= "https://github.com/paritytech/subxt.git"}

[workspace.dependencies]
scale-value= { version = "0.16.0" }

#async-std = { version = "1.9.0", features = ["attributes", "tokio1"] }
[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.60"
features = [
    'console',
    'Document',
    'HtmlElement',
    'HtmlInputElement',
    'MessageEvent',
    'Window',
    'Worker',
    'WebGlRenderingContext',
    'WebGlShader',
    'KeyboardEvent',
    'MouseEvent',
    'Touch',
    'Response',
]

[dev-dependencies]
pollster = "0.2.5"

[profile.dev]
opt-level = 1

[profile.release]
lto = true
opt-level = 's'
debug = false
strip = "debuginfo" # strip symbols brakes it findong the worker.
codegen-units = 1
panic = "abort"
incremental = false

[profile.profiling]
inherits = "release"
debug = true
strip = "none"
panic = "unwind"
incremental = true
